@using TescoAPIManager
@{
    ViewBag.Title = "Home Page";
    var query = Request.Params["query"];
    var amount = !string.IsNullOrEmpty(Request.Params["amount"]) ? Request.Params["amount"] : "10";

    TescoGroceryRoot TescoGroc = null;
    TescoProductRoot TescoProduct = null;

    if (!string.IsNullOrEmpty(query))
    {
        TescoGroc = TescoGetQuerys.MakeGroceryRequest(query, 0, amount);
    }
}

<style>
    .col-lg-4 {
        height: auto;
    }
</style>

<div class="jumbotron">
    <h1>Tesco Diets</h1>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>Enter an item to find</h2>
        <p>
            This will search the tesco api for items they sell. Will give alternate search terms if the input is spelled incorrectly.
        </p>

        @*Form*@
        <div class="row">
            <div class="col-md-12">
                <form>
                    <div class="col-lg-4">
                        <p>Search Term: </p>
                        <input name="query" /><br />
                    </div>
                    <div class="col-lg-4">
                        <p>Amount to show (defaults 10) </p>
                        <input name="amount" /><br />
                    </div>
                    <div class="col-lg-4">
                        <input type="checkbox" class="foodFilter" name="foodFilter" value="All">All<br>
                        <input type="checkbox" class="kosher" name="kosher" value="true">Kosher<br>
                        <input type="checkbox" class="vegetarian" name="vegetarian" value="true">Vegetarian<br>
                        <input type="checkbox" class="vegan" name="vegan" value="true">Vegan<br>
                    </div>
                    <br />
                    <button class="btn">Search</button>
                </form>
            </div>
        </div>
        @* --------------------------------------------------------------------------- *@
        @*Search Output*@
    </div>
    <hr />
    <div class="col-lg-12">
        @if (!string.IsNullOrEmpty(query))
        {
            <h2>Searching for items containing : "@query"</h2>
        }
    </div>
    @if (TescoGroc != null)
    {
        //tesco suggestions for misspelled items in the query
        if (TescoGroc.uk.ghs.products.suggestions.Any())
        {
            <p>Did you mean? : </p>
            <ul>
                @foreach (var item in TescoGroc.uk.ghs.products.suggestions)
                {
                    <li><a href="/?query=@item.text">@item.text</a></li>
                }
            </ul>
        }
        <hr />

        List<List<Category>> productCategories = new List<List<Category>>();
        //sort the query results as per the filters.
        foreach (var item in TescoGroc.uk.ghs.products.results)
        {
            TescoProduct = TescoGetQuerys.GetProductInfo("", item.tpnb.ToString(), "");
            if (TescoProduct != null)
            {
                if (TescoProduct.products.FirstOrDefault().productAttributes != null)
                {
                    productCategories.Add(TescoProduct.products.FirstOrDefault().productAttributes.FirstOrDefault().category);
                }
                else
                {
                    productCategories.Add(new List<Category>());
                }
            }
        }
        //-------------------
        //Variables to help build the output into a 3x3 grid
        var count = 0;
        var rowCount = 0;
        //----------------
        //searching through the collection and outputing items
        foreach (var item in TescoGroc.uk.ghs.products.results)
        {
            if (rowCount == 0)
            {
                @:<div class="row">
            }
            if (item != null)
            {
                <div class="col-lg-4">
                    @*Get items*@
                    @{ TescoProduct = TescoGetQuerys.GetProductInfo("", item.tpnb.ToString(), ""); }
                    @if (TescoProduct != null)
                    {
                        <a href="http://www.tesco.com/groceries/product/details/?id=@TescoProduct.products.FirstOrDefault().tpnc">
                            <img src="@item.image" />
                            <p>@item.name</p>
                        </a>
                    }
                    else
                    {
                        @*Get item with id if fails with tnpb*@
                        var productId = item.image.Split('/')[item.image.Split('/').Length - 2];
                        TescoProduct = TescoGetQuerys.GetProductInfo(productId, "", "");
                        if (TescoProduct != null)
                        {
                            <a href="http://www.tesco.com/groceries/product/details/?id=@TescoProduct.products.FirstOrDefault().tpnc">
                                <img src="@item.image" />
                                <p>@item.name</p>
                            </a>
                        }
                        else
                        {
                            @*output if item fails completely*@
                            <p>@item.name is broken : @productId</p>
                        }
                    }
                    
                    @*Output if lyestyle exists*@
                    <div class="foodCategoruy">
                        @if (productCategories[count].FirstOrDefault() != null && productCategories[count].FirstOrDefault().lifestyle != null)
                        {
                            foreach (var lifestyle in productCategories[count].FirstOrDefault().lifestyle)
                            {
                                <p>
                                    @lifestyle.lifestyle.value
                                </p>
                            }
                        }
                    </div>
                </div>
            }
            rowCount++;
            count++;
            if (rowCount == 3)
            {
                @:</div>
                rowCount = 0;
            }


        }

    }
    @* ------------------------------------------------------------------------------------------ *@
</div>